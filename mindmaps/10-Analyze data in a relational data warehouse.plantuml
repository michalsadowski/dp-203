@startmindmap
<style>
:depth(0) {
    BackgroundColor #091f2c
    FontColor #ffffff
    LineThickness 3.0
}
.topic1 {
    BackgroundColor #ffb900
    LineColor #ffb900
    LineThickness 3.0
    FontColor #000000
}
.topic2 {
    BackgroundColor #f4364c
    LineColor #f4364c
    LineThickness 3.0
    FontColor #ffffff
}
.topic3 {
    BackgroundColor #c5b4e3
    LineColor #c5b4e3
    LineThickness 3.0
    FontColor #000000
}
.topic4 {
    BackgroundColor #e1d3c7
    LineColor #e1d3c7
    LineThickness 3.0
    FontColor #000000
}
.topic5 {
    BackgroundColor #07641d
    LineColor #07641d
    LineThickness 3.0
    FontColor #ffffff
}
</style>
+ Data warehouse
++ 1) Design <<topic1>>
+++ Dimension tables <<topic1>>
++++_ Surrogate key (unique to the DWH)
++++_ Alternate key (natural key, business key, from transactional system)
++++_ Slowly changing dimensions
+++ Fact tables <<topic1>>
+++ Data warehouse schema designs <<topic1>>
++ 2) Create tables <<topic2>>
+++ Creating a dedicated SQL pool <<topic2>>
++++_ A unique name
++++_ A performance level [DW100c - DW30000c]
++++_ Empty pool or restore from a backup.
++++_ The collation of the SQL pool (can't change)
+++ Considerations for creating tables <<topic2>>
++++_ Fact, Dimension and Staging tables
++++_ Data integrity constraints
++++_ Indexes
++++_ Distribution
+++++_ Hash (fact tables)
+++++_ Round-robin (staging tables)
+++++_ Replicated (dimension tables)
++++_ Creating dimension tables
+++++_ Time dimension tables
++++_ Creating fact tables
++++_ Creating staging tables
+++++_ CREATE EXTERNAL DATA SOURCE
+++++_ CREATE EXTERNAL FILE FORMAT
+++++_ CREATE EXTERNAL TABLE
++ 3) Load tables <<topic3>>
+++ COPY INTO <<topic3>>
+++ Considerations <<topic3>>
++++_ Source -> Data Lake -> Staging tables
++++_ For dimension tables: update or insert new rows and generate surrogate key values
++++_ For fact tables: look up the surrogate keys for related dimensions
++++_ Update indexes and table distribution statistics.
++ 4) Query a data warehouse <<topic4>>
+++_ Aggregating measures by dimension attributes
+++_ Joins in a snowflake schema
+++_ Using ranking functions
++++_ ROW_NUMBER
++++_ RANK
++++_ DENSE_RANK
++++_ NTILE
+++_ Retrieving an approximate count
@endmindmap
